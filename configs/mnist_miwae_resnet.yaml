
_target_: src.models.MIWAE
_recursive_: false  

train:
  batch_size: 128
  epochs: 3000
  accelerator: "cuda"
  devices: 1
  precision: 16
  strategy: "auto"
  optimizer:
    _target_: torch.optim.Adam
    lr: 2e-4
    weight_decay: 0.
    betas: [0.9, 0.999]

model:  
  input_size: [28, 28]
  input_dim: 1
  latent_dim: [32, 7, 7]
  K: 5

  likelihood:
    _target_: src.likelihoods.BernoulliLikelihood

  encoder:
    _target_: src.layers.ResNetEncoder
    in_channels: ${model.input_dim}
    resolution: ${model.input_size}
    ch: 32
    ch_mult: [1, 2, 2]
    num_res_blocks: 2
    attn_resolutions: []
    z_channels: 32

  decoder:
    _target_: src.layers.ResNetDecoder
    z_channels: ${model.encoder.z_channels}
    ch: ${model.encoder.ch}
    ch_mult: ${model.encoder.ch_mult}
    num_res_blocks: ${model.encoder.num_res_blocks}
    attn_resolutions: ${model.encoder.attn_resolutions}
    out_ch: ${model.input_dim}
    resolution: ${model.input_size}


# Shared data params
data:
  _target_: src.data.MyMNIST
  root: "mnist/"
  download: True
  transform:
    _target_: torchvision.transforms.Compose
    transforms:
      - _target_: torchvision.transforms.ToTensor
      - _target_: src.data.transforms.Binarize

# Specific split params
train_data:
    train: True
val_data:
    train: False

dataloader:
  _target_: torch.utils.data.DataLoader
  batch_size: ${train.batch_size}
  num_workers: 4
  pin_memory: True


callbacks:
  image_reconstruction:
    _target_: src.callbacks.ImageReconstruction
    num_images: 8
    every_n_epochs: 1
    split: 'val'

  image_samples: 
    _target_: src.callbacks.ImageSamples
    num_samples: 16
    every_n_epochs: 1




