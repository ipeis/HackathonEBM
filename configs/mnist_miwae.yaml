
_target_: src.models.MIWAE
_recursive_: false  

train:
  batch_size: 128
  epochs: 300
  accelerator: "cuda"
  devices: 1
  precision: 16
  strategy: "auto"
  optimizer:
    _target_: torch.optim.Adam
    lr: 0.001
    weight_decay: 0.
    betas: [0.9, 0.999]

model:  
  input_size: [28,28]
  input_dim: 1
  latent_dim: [64]
  K: 5

  likelihood:
    _target_: src.likelihoods.BernoulliLikelihood

  encoder:
    _target_: src.layers.ConvEncoder
    input_channels: ${data.dim}
    input_shape: ${data.shape}
    latent_dim: 64
    hidden_channels: [64, 64, 128]
    kernel_sizes: [4, 4, 4]
    strides: [2, 2, 1]
    paddings: [1, 1, 0]
    batch_norm: True
      
  decoder:
    _target_: src.layers.ConvDecoder
    latent_dim: ${model.encoder.latent_dim}
    output_channels: ${data.dim}
    output_size: ${data.shape}
    hidden_channels: ${reverse:${model.encoder.hidden_channels}}
    kernel_sizes: ${reverse:${model.encoder.kernel_sizes}}
    strides: ${reverse:${model.encoder.strides}}
    paddings: ${reverse:${model.encoder.paddings}}
    batch_norm: True

# Shared data params
data:
  _target_: src.data.MyMNIST
  root: "mnist/"
  download: True
  transform:
    _target_: torchvision.transforms.Compose
    transforms:
      - _target_: torchvision.transforms.ToTensor
      - _target_: src.data.transforms.Binarize

# Specific split params
train_data:
    train: True
val_data:
    train: False

dataloader:
  _target_: torch.utils.data.DataLoader
  batch_size: ${train.batch_size}
  num_workers: 4
  pin_memory: True


callbacks:
  image_reconstruction:
    _target_: src.callbacks.ImageReconstruction
    num_images: 8
    every_n_epochs: 1
    split: 'val'

  image_samples: 
    _target_: src.callbacks.ImageSamples
    num_samples: 16
    every_n_epochs: 1




